# Default values for medici-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  #annotations: {}
  #  kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  #hosts:
  #  - paths: ["/api"]
  #  - paths: ["/chainlink"]
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
nginx-ingress:
  enabled: true
postgresql:
  enabled: false
pgadmin:
  enabled: false
kubeapps:
  enabled: false
awslambda:
  enabled: false
  externalName: <REPLACE_HERE>
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        #nginx.ingress.kubernetes.io/add-base-url: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - paths: ["/api(/|$)(.*)"]
chainlink:
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        #nginx.ingress.kubernetes.io/add-base-url: "true"
        #nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - paths: ["/"]
  config:
    ETH_URL: <REPLACE_HERE> #"ws://medici-geth:8846"
    ROOT: /chainlink
    LOG_LEVEL: debug
    ETH_CHAIN_ID: "3"
    MIN_OUTGOING_CONFIRMATIONS: "2"
    LINK_CONTRACT_ADDRESS: "0x20fe562d797a42dcb3399062ae9546cd06f63280"
    CHAINLINK_TLS_PORT: "0"
    SECURE_COOKIES: "false"
    ALLOW_ORIGINS: "*"
    API_EMAIL: <REPLACE_HERE>
    API_PASSWORD: <REPLACE_HERE>
    WALLET_PASSWORD: <REPLACE_HERE>
    DATABASE_URL: <REPLACE_HERE>
    FEATURE_EXTERNAL_INITIATORS: "true"
  service:
    port: 6688
geth:
  enabled: false
  service:
    port: 8845
    wss: 8846
  image:
    command: ["/bin/sh"]
    args: ["-c",
    "geth --config /root/.config/geth-config.toml --testnet;",
    "while true; do sleep 10;done;"]
  volumeMounts:
    - mountPath: "/root/.ethereum"
      name: ethereum
    - mountPath: "/root/.config"
      name: config
  volumes:
    #- name: ethereum
    #  persistentVolumeClaim:
    #    claimName: standard-claim-100gi
    - name: config
      configMap:
        name: geth-config
    - name: ethereum
      awsElasticBlockStore:
        volumeID: <REPLACE_HERE>
        fsType: ext4
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
